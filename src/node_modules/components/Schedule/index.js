import React, { Component } from 'react'
import { invoker, identity, times } from 'ramda'
import { ScrollSync } from 'react-virtualized'
import moment from 'moment'
import { getHourCount, getPixelCount } from './util'
import DefaultDropdown from './DefaultDropdown'
import Events from './Events'
import Days from './Days'

class Schedule extends Component {
  constructor(props) {
    super(props)
    this.state = {
      scrollLeft: undefined
    }
  }

  goTo = pixelCount =>
    this.setState({ scrollLeft: pixelCount }, () =>
      this.setState({ scrollLeft: undefined })
    )

  scrollToTime = unit => (num, currentDate) => {
    const a = moment().startOf('day')
    const b = invoker(1, unit)(num, currentDate.startOf('month'))
    const pixelDiff = getPixelCount(a, b)
    this.goTo(pixelDiff < 0 ? 0 : pixelDiff)
  }

  render() {
    const { events, onUpdate, onEventClick, describeEvent } = this.props
    const Dropdown = this.props.Dropdown || DefaultDropdown
    const Button = this.props.Button || <button />

    return (
      <ScrollSync>
        {({ scrollTop, scrollLeft, onScroll, scrollWidth }) => {
          const currentDate = moment()
            .startOf('day')
            .add(getHourCount(scrollLeft), 'hours')
          const monthProps = {
            value: currentDate.month(),
            onChange: event =>
              this.scrollToTime('month')(event.target.value, currentDate),
            options: moment.months().map((month, idx) => ({
              value: idx,
              key: idx,
              text: month
            }))
          }
          const todayProps = {
            onClick: () => this.goTo(0)
          }
          const yearProps = {
            value: currentDate.year(),
            onChange: event =>
              this.scrollToTime('year')(event.target.value, currentDate),
            options: times(identity, 6).map(idx => {
              const year = moment().year() + idx
              return { value: year, key: year, text: year }
            })
          }
          return (
            <div>
              <div className="tc mv3 flex flex-row justify-center">
                <div className="ph2">
                  {typeof Button === 'function'
                    ? <Button {...todayProps}>Today</Button>
                    : React.cloneElement(Button, todayProps, 'Today')}
                </div>
                <div className="ph2">
                  {typeof Dropdown === 'function'
                    ? <Dropdown {...monthProps} />
                    : React.cloneElement(Dropdown, monthProps)}
                </div>
                <div className="ph2">
                  {typeof Dropdown === 'function'
                    ? <Dropdown {...yearProps} />
                    : React.cloneElement(Dropdown, yearProps)}
                </div>
              </div>
              <div
                className="relative center ba b--light-gray br3 overflow-hidden"
                style={{ width: '1497px', height: '624px' }}
              >
                <div className="absolute top-0 left-0">
                  <Days
                    height={637}
                    scrollLeft={scrollLeft}
                    scrollWidth={scrollWidth}
                  />
                </div>
                <div className="absolute left-0 top-0 h-100 w-100">
                  <div className="absolute" style={{ top: '37px' }}>
                    <Events
                      events={events}
                      onScroll={onScroll}
                      onUpdate={onUpdate}
                      describeEvent={describeEvent}
                      onEventClick={onEventClick}
                      scrollLeft={this.state.scrollLeft}
                      scrollTop={scrollTop}
                    />
                  </div>
                </div>
              </div>
            </div>
          )
        }}
      </ScrollSync>
    )
  }
}

export default Schedule
